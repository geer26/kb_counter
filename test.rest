### Add user
# Endpoint: /API/adduser
# Method: POST
# Type: application/json
# JSON payload: {"username": <str>, "password": <str>, "su": <boolean>}
# Returns: 200, 401 or 500 with message
POST http://127.0.0.1:5001/API/adduser HTTP/1.1
content-type: application/json

{
    "username": "user",
    "password": "123456",
    "su": false
}


### Delete user
# Endpoint: /API/deluser
# Method: POST
# Type: application/json
# JSON payload: {"id": <int>}
# Returns: 200 or 500 with message
POST http://127.0.0.1:5001/API/deluser HTTP/1.1
content-type: application/json

{
    "id": 1
}


### Login user
# Endpoint: /API/login
# Method: POST
# Type: application/json
# JSON payload: {"username": <str>, "password": <str>, "mode": <str>}
# MODE: SET / SIN / EXC / COO
# Returns: 200 or 400, 401, 500 with message
POST http://127.0.0.1:5001/API/login HTTP/1.1
content-type: application/json

{
    "username": "admin",
    "password": 123456,
    "mode": "SET"
}



### Add new exercise
# Endpoint: /API/addexercise
# Method: POST
# Type: application/json
# JSON payload: {name: <str>, short_name: <str>, link: <str>, type: <str>, max_rep:<int>, duration:<int>, userid:<int>}
# Returns: 200 or 500 with message
POST http://127.0.0.1:5001/API/addexercise HTTP/1.1
content-type: application/json

{
    "name": "test3",
    "short_name": "t3",
    "link": "youtu.be",
    "type": "rest",
    "max_rep": 45,
    "duration": 300,
    "userid": 2
}



### Delete exercise
# Endpoint: /API/delexercise
# Method: POST
# Type: application/json
# JSON payload: {id:<int>, userid:<int>}
# Returns: 200 or 500 with message
POST http://127.0.0.1:5001/API/delexercise HTTP/1.1
content-type: application/json

{
    "id": 7,
    "userid": 2
}



### Delete workout
# Endpoint: /API/delworkout
# Method: POST
# Type: application/json
# JSON payload: {id:<int>, userid:<int>}
# Returns: 200 or 500 with message
POST http://127.0.0.1:5001/API/delworkout HTTP/1.1
content-type: application/json

{
    "id": 8,
    "userid": 2
}


### Delete event
# Endpoint: /API/delevent
# Method: POST
# Type: application/json
# JSON payload: {id:<int>, user:<int>}
# Returns: 200 or 500 with message
POST http://127.0.0.1:5001/API/delevent HTTP/1.1
content-type: application/json

{
    "id": 2,
    "user": 2
}



### Query all in DB
# Endpoint: /API/query
# Method: GET
# Returns: 200, 401 or 500 with message
GET http://127.0.0.1:5001/API/query HTTP/1.1